version: '3.8'

services:
  proxy:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: smart-proxy
    ports:
      - "7777:7777"
    environment:
      - TARGET_URLS=httpbin:80|nginx:80
      - TIMEOUT=5000
      - PORT=7777
      - HOST=0.0.0.0
      - LOG_LEVEL=info
    volumes:
      - ./logs:/app/logs
    networks:
      - proxy-network
    restart: unless-stopped
    depends_on:
      - httpbin
      - nginx
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); http.get('http://localhost:7777/health', (res) => { if (res.statusCode === 200 || res.statusCode === 503) process.exit(0); else process.exit(1); }).on('error', () => process.exit(1));"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Example target services for testing
  httpbin:
    image: kennethreitz/httpbin:latest
    container_name: httpbin-service
    ports:
      - "8080:80"
    networks:
      - proxy-network

  nginx:
    image: nginx:alpine
    container_name: nginx-service
    ports:
      - "8081:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - proxy-network

  # Monitoring stack (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - proxy-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning:ro
    networks:
      - proxy-network
    profiles:
      - monitoring

networks:
  proxy-network:
    driver: bridge

volumes:
  grafana-data: