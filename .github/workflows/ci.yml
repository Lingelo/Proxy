name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run TypeScript compilation
      run: yarn build

    - name: Test configuration validation
      run: |
        # Test with valid configuration
        TARGET_URLS="localhost:3000|localhost:3001" \
        TIMEOUT=5000 \
        PORT=7777 \
        HOST="0.0.0.0" \
        LOG_LEVEL="info" \
        timeout 5s node dist/index.js || true
        
        # Test validation with invalid config (should fail)
        if TARGET_URLS="invalid" node dist/index.js 2>&1 | grep -q "Configuration validation failed"; then
          echo "✅ Validation correctly rejected invalid config"
        else
          echo "❌ Validation should have failed"
          exit 1
        fi

    - name: Test endpoints (smoke test)
      run: |
        # Start server in background
        TARGET_URLS="httpbin.org:80" \
        PORT=7777 \
        TIMEOUT=5000 \
        node dist/index.js &
        SERVER_PID=$!
        
        # Wait for server to start and health checks to complete
        sleep 10
        
        # Test health endpoint (should be 200 with healthy target)
        if curl -f -s http://localhost:7777/health > /dev/null; then
          echo "✅ Health endpoint accessible"
        else
          echo "❌ Health endpoint failed"
          kill $SERVER_PID
          exit 1
        fi
        
        # Test metrics endpoint
        if curl -f -s http://localhost:7777/metrics > /dev/null; then
          echo "✅ Metrics endpoint accessible"
        else
          echo "❌ Metrics endpoint failed"
          kill $SERVER_PID
          exit 1
        fi
        
        # Clean up
        kill $SERVER_PID

  lint:
    name: Lint & Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Check TypeScript types
      run: yarn build

    - name: Check code formatting (if prettier exists)
      run: |
        if [ -f "package.json" ] && grep -q "prettier" package.json; then
          yarn prettier --check .
        else
          echo "⚠️ Prettier not configured, skipping format check"
        fi

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run security audit
      run: yarn audit --level moderate

    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD